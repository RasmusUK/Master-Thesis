@page "/spot-quotes"
@using SpotQuoteBooking.EventSource.Core
@using global::EventSource.Core.Interfaces
@inject IRepository<SpotQuoteBooking> SpotQuoteBookingRepository
@inject NavigationManager Navigation

<PageTitle>Spot Quotes</PageTitle>

<MudStack Row="true" Justify="Justify.SpaceBetween" Class="pt-5 pb-5">
    <h1>Spot Quotes</h1>
    <MudButton StartIcon="@Icons.Material.Filled.Add" OnClick="@CreateNew" Variant="Variant.Filled">
        Create
    </MudButton>
</MudStack>

<MudDataGrid T="SpotQuoteBooking" Items="@spotQuoteBookings" RowClick="OnRowClick" Loading="@loading">
    <Columns>
        <PropertyColumn Property="x => x.CreatedAt" Title="Created Time"/>
        <PropertyColumn Property="x => x.TransportMode" Title="Mode"/>
        <PropertyColumn Property="x => x.AddressFrom.Country.Code" Title="Pickup"/>
        <PropertyColumn Property="x => x.AddressTo.Country.Code" Title="Delivery"/>
        <PropertyColumn Property="x => x.ValidUntil" Title="Validity"/>
        <PropertyColumn Property="x => x.Status" Title="Status"/>
    </Columns>
    <PagerContent>
        <MudDataGridPager T="SpotQuoteBooking"/>
    </PagerContent>
</MudDataGrid>

@code {
    private IEnumerable<SpotQuoteBooking> spotQuoteBookings = new List<SpotQuoteBooking>();
    private bool loading = true;

    protected override async Task OnInitializedAsync()
    {
        spotQuoteBookings = await SpotQuoteBookingRepository.ReadAllAsync();
        loading = false;
    }
    
    private void CreateNew()
    {
        Navigation.NavigateTo("/spot-quotes/create");
    }

    private void OnRowClick(DataGridRowClickEventArgs<SpotQuoteBooking> e)
    {
        Navigation.NavigateTo($"/spot-quotes/edit/{e.Item.Id}");
    }
}