@page "/events"
@using global::EventSourcingFramework.Core.Interfaces
@using EventSourcingFramework.Core.Models.Events
@inject IEventStore EventStore
@inject NavigationManager Navigation

<MudText Typo="Typo.h5" Class="pt-5 pb-5 ps-5">Events</MudText>

<MudStack>
    <MudGrid Class="d-flex align-center">
        <MudItem xs="4">
            <MudDateRangePicker @bind-DateRange="dateRange" DateFormat="dd/MM/yyyy HH:mm" 
                                Placeholder="dd/mm/yy hh:mm" Variant="Variant.Filled"/>
        </MudItem>
        <MudItem xs="4">
            <MudTextField T="Guid?" Label="Entity id" Variant="Variant.Filled" Clearable="true" 
                          @bind-Value="entityId"/>
        </MudItem>
        <MudItem xs="2">
            <MudButton FullWidth="true" StartIcon="@Icons.Material.Filled.Search" Color="Color.Primary" OnClick="Search" Variant="Variant.Outlined">
                Search
            </MudButton>
        </MudItem>
        <MudItem xs="2">
            <MudButton FullWidth="true" StartIcon="@Icons.Material.Filled.ClearAll" Color="Color.Error" OnClick="Clear" Variant="Variant.Outlined">
                Clear all
            </MudButton>
        </MudItem>
    </MudGrid>
    
    <MudDataGrid T="IEvent" Items="@events" RowClick="OnRowClick" Loading="@loading" SortMode="SortMode.Single" Filterable="true" 
                 FilterMode="@DataGridFilterMode.ColumnFilterRow" FilterCaseSensitivity="DataGridFilterCaseSensitivity.CaseInsensitive">
        <Columns>
            <PropertyColumn Property="x => x.Id" Title="Id" Filterable="false"/>
            <PropertyColumn Property="x => x.EventNumber" Title="Number" Filterable="false"/>
            <PropertyColumn Property="x => x.Timestamp" Title="Timestamp" Filterable="false"/>
            <PropertyColumn Property="x => x.EntityId" Title="Entity id" Filterable="false"/>
            <PropertyColumn Property="x => x.Typename" Title="Type"/>
            <PropertyColumn Property="x => x.TransactionId" Title="Transaction id" Filterable="false"/>
            <PropertyColumn Property="x => x.Compensation" Title="Is compensation"/>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="IEvent"/>
        </PagerContent>
    </MudDataGrid>
</MudStack>


@code {
    private IEnumerable<IEvent> events = new List<IEvent>();
    private bool loading = true;
    private Guid? entityId;
    private DateRange dateRange = new(DateTime.UtcNow.AddDays(-1), DateTime.UtcNow);
    protected override async Task OnInitializedAsync()
    {
        await Search();
    }
    
    private void OnRowClick(DataGridRowClickEventArgs<IEvent> e)
    {
        Navigation.NavigateTo($"/events/{e.Item.Id}");
    }

    private async Task Search()
    {
        loading = true;
        if (entityId is null || entityId == default)
            events = await EventStore.GetEventsFromUntilAsync(dateRange.Start!.Value, dateRange.End!.Value);
        else
            events = await EventStore.GetEventsByEntityIdFromUntilAsync(entityId.Value, dateRange.Start!.Value, dateRange.End!.Value);
        events = events.OrderByDescending(x => x.EventNumber);
        loading = false;
    }

    private void Clear()
    {
        dateRange = new(DateTime.UtcNow.AddDays(-1), DateTime.UtcNow);
        entityId = null;
    }
}